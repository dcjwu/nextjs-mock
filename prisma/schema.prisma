datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                        String      @id @default(cuid())
  userId                    String
  type                      String
  provider                  String
  providerAccountId         String
  refresToken               String?     @db.Text
  accessToken               String?     @db.Text
  expiresAt                 Int?
  tokenType                 String?
  scope                     String?
  idToken                   String?     @db.Text
  sessionState              String?

  createdAt                 DateTime    @default(now())
  updatedAt                 DateTime    @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id                        String      @id @default(cuid())
  sessionToken              String      @unique
  userId                    String
  expires                   DateTime
  user                      User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

enum Role {
    ADMIN
    USER
}

model User {
  id                        String      @id @default(cuid())
  name                      String?
  email                     String      @unique
  emailVerified             DateTime?
  role                      Role        @default(USER)

  imageUrl                  String?

  accounts                  Account[]
  sessions                  Session[]

  createdAt                 DateTime    @default(now())
  updatedAt                 DateTime    @updatedAt

  @@map("users")
}

model VerificationToken {
  identifier                String
  token                     String      @unique
  expires                   DateTime

  createdAt                 DateTime    @default(now())

  @@unique([identifier, token])

  @@map("verificationTokens")
}
